{"version":3,"sources":["context/authContext.js","context/userContext.js","components/PrivateComponent.jsx","banner.jpeg","components/Sidebar.jsx","graphql/auth/mutations.js","components/PrivateRoute.jsx","layouts/PrivateLayout.jsx","pages/Index.jsx","pages/Page2.jsx","pages/category1/Index.jsx","pages/category1/CategoryPage1.jsx","graphql/usuarios/queries.js","utils/enums.js","pages/usuarios/index.jsx","components/Input.jsx","components/ButtonLoading.jsx","hooks/useFormData.js","graphql/usuarios/mutations.js","components/Dropdown.jsx","pages/usuarios/editar.jsx","layouts/AuthLayout.jsx","pages/logo7.svg","pages/auth/register.jsx","pages/auth/login.jsx","graphql/proyectos/queries.js","graphql/proyectos/mutations.js","graphql/inscripciones/mutaciones.js","components/Accordion.jsx","pages/proyectos/Index.jsx","context/objContext.js","pages/proyectos/NuevoProyecto.jsx","graphql/inscripciones/queries.js","pages/inscripciones/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["AuthContext","createContext","useAuth","useContext","UserContext","useUser","PrivateComponent","roleList","children","userData","includes","rol","SidebarLinks","className","to","title","icon","Logout","setToken","onClick","console","log","Logo","src","banner","alt","ResponsiveSidebar","id","SidebarRoute","isActive","Sidebar","useState","open","setOpen","REGISTRO","gql","LOGIN","REFRESH_TOKEN","PrivateRoute","data-testid","PrivateLayout","navigate","useNavigate","authToken","loadingAuth","setLoadingAuth","useMutation","refreshToken","dataMutation","data","loadingMutation","loading","error","useEffect","token","Index","Page2","IndexCategory1","Category1","GET_USUARIOS","GET_USUARIO","Enum_Rol","ADMINISTRADOR","ESTUDIANTE","LIDER","Enum_EstadoUsuario","PENDIENTE","AUTORIZADO","NO_AUTORIZADO","Enum_EstadoProyecto","ACTIVO","INACTIVO","Enum_TipoObjetivo","GENERAL","ESPECIFICO","IndexUsuarios","useQuery","toast","Usuarios","map","u","identificacion","nombre","apellido","correo","estado","_id","Input","label","name","defaultValue","type","required","htmlFor","ButtonLoading","disabled","text","height","width","useFormData","initial","form","useRef","formData","setFormData","updateFormData","fd","FormData","current","obj","forEach","value","key","split","p1","p2","p3","Object","keys","getFormData","EDITAR_USUARIO","DropDown","options","selectedValue","setSelectedValue","optionsSelect","entries","onChange","e","target","o","nanoid","EditarUsuario","useParams","variables","queryData","queryError","queryLoading","editarUsuario","mutationData","mutationLoading","mutationError","success","onSubmit","preventDefault","ref","Usuario","length","AuthLayout","Register","registro","Login","login","logo","PROYECTOS","EDITAR_PROYECTO","CREAR_PROYECTO","CREAR_INSCRIPCION","APROBAR_INSCRIPCION","AccordionStyled","styled","props","Accordion","theme","backgroundColor","AccordionSummaryStyled","AccordionSummary","AccordionDetailsStyled","AccordionDetails","AccordionProyecto","proyecto","showDialog","setShowDialog","expandIcon","idProyecto","inscripciones","lider","objetivos","objetivo","tipo","descripcion","Dialog","onClose","FormEditProyecto","editarProyecto","campos","Objetivo","InscripcionProyecto","estadoInscripcion","setEstadoInscripcion","crearInscripcion","flt","filter","el","estudiante","IndexProyectos","Proyectos","ObjContext","Objetivos","listaObjetivos","setListaObjetivos","maxObjetivos","setMaxObjetivos","componenteObjetivoAgregado","Provider","eliminarObjetivo","FormObjetivo","NuevoProyecto","listaUsuarios","setListaUsuarios","filtro","crearProyecto","lu","elemento","values","presupuesto","parseFloat","GET_INSCRIPCIONES","AccordionInscripcion","titulo","refetch","inscripcion","Inscripcion","aprobarInscripcion","aprobarInscripcionId","IndexInscripciones","Inscripciones","httpLink","createHttpLink","uri","authLink","setContext","_","headers","JSON","parse","localStorage","getItem","authorization","client","ApolloClient","cache","InMemoryCache","link","concat","App","setUserData","setAuthToken","decoded","jwt_decode","ApolloProvider","setItem","stringify","removeItem","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a444504.chunk.js","sourcesContent":["import { createContext, useContext } from 'react';\n\nexport const AuthContext = createContext(null);\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n","import { createContext, useContext } from 'react';\n\nexport const UserContext = createContext(null);\n\nexport const useUser = () => {\n  return useContext(UserContext);\n};\n","import { useUser } from 'context/userContext';\nimport React from 'react';\n\nconst PrivateComponent = ({ roleList, children }) => {\n  const { userData } = useUser();\n\n  if (roleList.includes(userData.rol)) {\n    return children;\n  }\n\n  return <></>;\n};\n\nexport default PrivateComponent;\n","export default __webpack_public_path__ + \"static/media/banner.ef201156.jpeg\";","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useAuth } from 'context/authContext';\nimport PrivateComponent from './PrivateComponent';\nimport banner from '../banner.jpeg'\n\nconst SidebarLinks = () => {\n  return (\n    <ul className='mt-5'>\n      <SidebarRoute to='' title='Inicio' icon='fas fa-home' />\n      <PrivateComponent roleList={['ADMINISTRADOR']}>\n        <SidebarRoute to='/usuarios' title='Usuarios' icon='fas fa-user' />\n      </PrivateComponent>\n      <SidebarRoute to='/proyectos' title='Proyectos' icon='fas fa-file' />\n      <PrivateComponent roleList={['ADMINISTRADOR', 'LIDER']}>\n        <SidebarRoute to='/inscripciones' title='Aprobacion Inscripciones' icon='fas fa-user' />\n      </PrivateComponent>\n      \n      <Logout />\n    </ul>\n  );\n};\n\nconst Logout = () => {\n  const { setToken } = useAuth();\n  const deleteToken = () => {\n    console.log('eliminar token');\n    setToken(null);\n  };\n  return (\n    <li onClick={() => deleteToken()}>\n      <NavLink to='/auth/login' className='sidebar-route text-red-700'>\n        <div className='flex items-center'>\n          <i className='fas fa-sign-out-alt' />\n          <span className='text-sm  ml-2'>Cerrar Sesión</span>\n        </div>\n      </NavLink>\n    </li>\n  );\n};\n\nconst Logo = () => {\n  return (\n    <div className='py-3 w-full flex flex-col items-center justify-center'>\n      <img src={banner} alt='Logo' />\n      <br />\n      <span className='my-2 font-bold text-center'>Administrador de proyectos Misión TIC</span>\n    </div>\n  );\n};\n\nconst Sidebar = () => {\n  const [open, setOpen] = useState(true);\n  return (\n    <div className='flex flex-col md:flex-row flex-no-wrap md:h-full'>\n      {/* Sidebar starts */}\n\n      <div className='sidebar hidden md:flex'>\n        <div className='px-8'>\n          <Logo />\n          <SidebarLinks />\n        </div>\n      </div>\n      <div className='flex md:hidden w-full justify-between bg-green-800 p-2 text-white'>\n        <i className={`fas fa-${open ? 'times' : 'bars'}`} onClick={() => setOpen(!open)} />\n        <i className='fas fa-home' />\n      </div>\n      {open && <ResponsiveSidebar />}\n      {/* Sidebar ends */}\n    </div>\n  );\n};\n\nconst ResponsiveSidebar = () => {\n  return (\n    <div>\n      <div\n        className='sidebar h-full z-40 absolute md:h-full sm:hidden transition duration-150 ease-in-out'\n        id='mobile-nav'\n      >\n        <div className='px-8'>\n          <Logo />\n          <SidebarLinks />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst SidebarRoute = ({ to, title, icon }) => {\n  return (\n    <li>\n      <NavLink\n        to={to}\n        className={({ isActive }) =>\n          isActive\n            ? 'sidebar-route text-white bg-blue-700'\n            : 'sidebar-route text-gray-900 hover:text-white hover:bg-gray-400'\n        }\n      >\n        <div className='flex items-center-left'>\n          <i className={icon} />\n          <span className='text-sm  ml-2'>{title}</span>\n        </div>\n      </NavLink>\n    </li>\n  );\n};\n\nexport default Sidebar;\n","import { gql } from '@apollo/client';\n\nconst REGISTRO = gql`\n  mutation Registro(\n    $nombre: String!\n    $apellido: String!\n    $identificacion: String!\n    $correo: String!\n    $rol: Enum_Rol!\n    $password: String!\n  ) {\n    registro(\n      nombre: $nombre\n      apellido: $apellido\n      identificacion: $identificacion\n      correo: $correo\n      rol: $rol\n      password: $password\n    ) {\n      token\n      error\n    }\n  }\n`;\n\nconst LOGIN = gql`\n  mutation Login($correo: String!, $password: String!) {\n    login(correo: $correo, password: $password) {\n      token\n      error\n    }\n  }\n`;\n\nconst REFRESH_TOKEN = gql`\n  mutation RefreshToken {\n    refreshToken {\n      token\n      error\n    }\n  }\n`;\n\nexport { REGISTRO, LOGIN, REFRESH_TOKEN };\n","import { useUser } from 'context/userContext';\nimport React from 'react';\n\nconst PrivateRoute = ({ roleList, children }) => {\n  const { userData } = useUser();\n\n  if (roleList.includes(userData.rol)) {\n    return children;\n  }\n\n  return <div data-testid=\"not-authorized\" className='text-9xl text-red-500 '>No estás autorizado para ver este sitio.</div>;\n};\n\nexport default PrivateRoute;\n","import Sidebar from 'components/Sidebar';\nimport { Outlet } from 'react-router';\nimport React, { useEffect, useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { useMutation } from '@apollo/client';\nimport { useAuth } from 'context/authContext';\nimport { REFRESH_TOKEN } from 'graphql/auth/mutations';\nimport { useNavigate } from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PrivateRoute from 'components/PrivateRoute';\n\nconst PrivateLayout = () => {\n  const navigate = useNavigate();\n  const { authToken, setToken } = useAuth();\n  const [loadingAuth, setLoadingAuth] = useState(true);\n\n  const [refreshToken, { data: dataMutation, loading: loadingMutation, error: errorMutation }] =\n    useMutation(REFRESH_TOKEN);\n\n  useEffect(() => {\n    refreshToken();\n  }, [refreshToken]);\n\n  useEffect(() => {\n    if (dataMutation) {\n      if (dataMutation.refreshToken.token) {\n        setToken(dataMutation.refreshToken.token);\n      } else {\n        setToken(null);\n        navigate('/auth/login');\n      }\n      setLoadingAuth(false);\n    }\n  }, [dataMutation, setToken, loadingAuth, navigate]);\n\n  if (loadingMutation || loadingAuth) return <div>Loading...</div>;\n\n  return (\n    <div className='flex flex-col md:flex-row flex-no-wrap h-screen'>\n      <Sidebar />\n      <div className='flex w-full h-full'>\n        <div className='w-full h-full  overflow-y-scroll'>\n          <Outlet />\n        </div>\n      </div>\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default PrivateLayout;\n","import React from 'react';\n\nconst Index = () => {\n  return (\n<div className=\"card mb-12\">\n  <img className=\"card-img-top\" src=\"https://www.misiontic2022.gov.co/746/propertyvalues-187848_banner.jpg\" alt=\"Card image cap\"></img>\n  <div className=\"card-body\">\n    <h1 className=\"card-title\">7Trenta Administraor de Proyectos</h1>\n    <h3 className=\"card-text\">Planificación estratégica y ejecución más inteligente</h3>\n    <p className=\"card-text\"><small className=\"text-muted\">Proyecto Misión TIC 2021</small></p>\n  </div>\n  <div className=\"row\">\n  <div className=\"col-sm-2\">\n    <div className=\"card\">\n      <div className=\"card-body\">\n      <img className=\"card-img-top\" src=\"https://cdn.icon-icons.com/icons2/1879/PNG/512/iconfinder-3-avatar-2754579_120516.png\" alt=\"Card image cap\"></img>\n      <h5 className=\"card-title d-flex justify-content-center\">DANIEL MONTOYA</h5>\n        <p className=\"card-text\">Scrum Master</p>\n       </div>\n    </div>\n  </div>\n\n  <div className=\"col-sm-2\">\n    <div className=\"card\">\n      <div className=\"card-body\">\n      <img className=\"card-img-top\" src=\"https://cdn-icons-png.flaticon.com/512/194/194938.png\" alt=\"Card image cap\"></img>\n        <h5 className=\"card-title d-flex justify-content-center\">PAOLA SIERRA</h5>\n        <p className=\"card-text\">Analista</p>\n       </div>\n    </div>\n  </div>\n  <div className=\"col-sm-2\">\n    <div className=\"card\">\n      <div className=\"card-body\">\n      <img className=\"card-img-top\" src=\"https://cdn.icon-icons.com/icons2/1879/PNG/512/iconfinder-3-avatar-2754579_120516.png\" alt=\"Card image cap\"></img>\n      <h5 className=\"card-title d-flex justify-content-center\">ÁLVARO COBO</h5>\n        <p className=\"card-text\">Desarrollador</p>\n       </div>\n    </div>\n  </div>\n  <div className=\"col-sm-2\">\n    <div className=\"card\">\n      <div className=\"card-body\">\n      <img className=\"card-img-top\" src=\"https://cdn.icon-icons.com/icons2/1879/PNG/512/iconfinder-3-avatar-2754579_120516.png\" alt=\"Card image cap\"></img>\n      <h5 className=\"card-title d-flex justify-content-center\">PABLO LEDESMA</h5>\n        <p className=\"card-text\">Admin BD</p>\n       </div>\n    </div>\n  </div>\n  <div className=\"col-sm-2\">\n    <div className=\"card\">\n      <div className=\"card-body\">\n      <img className=\"card-img-top\" src=\"https://cdn.icon-icons.com/icons2/1879/PNG/512/iconfinder-3-avatar-2754579_120516.png\" alt=\"Card image cap\"></img>\n      <h5 className=\"card-title d-flex justify-content-center\">JHOAN SIERRA</h5>\n        <p className=\"card-text\">Product Onwer</p>\n       </div>\n    </div>\n  </div>\n  <div className=\"col-sm-2\">\n    <div className=\"card\">\n      <div className=\"card-body\">\n      <img className=\"card-img-top\" src=\"https://cdn.icon-icons.com/icons2/1879/PNG/512/iconfinder-3-avatar-2754579_120516.png\" alt=\"Card image cap\"></img>\n      <h5 className=\"card-title d-flex justify-content-center\">JOSÉ CORREDOR</h5>\n        <p className=\"card-text\">Desarrollador</p>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n\n\n  );\n};\n\nexport default Index;\n","import React from 'react';\n\nconst Page2 = () => {\n  return <div>Pagina 2</div>;\n};\n\nexport default Page2;\n","import React from 'react';\n\nconst IndexCategory1 = () => {\n  return <div>Index Category1</div>;\n};\n\nexport default IndexCategory1;\n","import React from 'react';\n\nconst Category1 = () => {\n  return <div>pagina /category/page1</div>;\n};\n\nexport default Category1;\n","import { gql } from '@apollo/client';\n\nconst GET_USUARIOS = gql`\n  query Query($filtro: FiltroUsuarios) {\n    Usuarios(filtro: $filtro) {\n      _id\n      nombre\n      apellido\n      correo\n      estado\n      identificacion\n      rol\n    }\n  }\n`;\n\nconst GET_USUARIO = gql`\n  query Usuario($_id: String!) {\n    Usuario(_id: $_id) {\n      _id\n      nombre\n      apellido\n      correo\n      estado\n      identificacion\n      rol\n    }\n  }\n`;\n\nexport { GET_USUARIOS, GET_USUARIO };\n","const Enum_Rol = {\n  ADMINISTRADOR: 'Administrador',\n  ESTUDIANTE: 'Estudiante',\n  LIDER: 'Líder',\n};\n\nconst Enum_EstadoUsuario = {\n  PENDIENTE: 'Pendiente',\n  AUTORIZADO: 'Autorizado',\n  NO_AUTORIZADO: 'No autorizado',\n};\n\nconst Enum_EstadoProyecto = {\n  ACTIVO: 'Activo',\n  INACTIVO: 'Inactivo',\n};\n\nconst Enum_TipoObjetivo = {\n  GENERAL: 'General',\n  ESPECIFICO: 'Específico',\n};\n\nexport { Enum_Rol, Enum_EstadoUsuario, Enum_EstadoProyecto, Enum_TipoObjetivo };\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { GET_USUARIOS } from 'graphql/usuarios/queries';\nimport { toast } from 'react-toastify';\nimport { Link } from 'react-router-dom';\nimport { Enum_Rol, Enum_EstadoUsuario } from 'utils/enums';\nimport PrivateRoute from 'components/PrivateRoute';\n\nconst IndexUsuarios = () => {\n  const { data, error, loading } = useQuery(GET_USUARIOS);\n\n  useEffect(() => {\n    if (error) {\n      toast.error('Error consultando los usuarios');\n    }\n  }, [error]);\n\n  if (loading) return <div>Cargando....</div>;\n\n  return (\n    <PrivateRoute roleList={['ADMINISTRADOR']}>\n     \n      <div className='datos'>\n      <span className=\"my-2 text-xl font-bold text-center\">Usuarios registrados</span>\n        <br />\n        <br />\n        <table className='tabla'>\n           <thead>\n            <tr>\n            <th>Identificación</th>\n              <th>Nombre</th>\n              <th>Apellidos</th>\n              <th>Correo</th>\n              <th>Rol</th>\n              <th>Estado</th>\n              <th>Editar</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data && data.Usuarios ? (\n              <>\n                {data.Usuarios.map((u) => {\n                  return (\n                    <tr key={u._id}>\n                      <td>{u.identificacion}</td>\n                      <td>{u.nombre}</td>\n                      <td>{u.apellido}</td>\n                      <td>{u.correo}</td>\n                      <td>{Enum_Rol[u.rol]}</td>\n                      <td>{Enum_EstadoUsuario[u.estado]}</td>\n                      <td>\n                        <Link to={`/usuarios/editar/${u._id}`}>\n                          <i className='fas fa-pen text-blue-600 hover:text-gray-400 cursor-pointer' />\n                        </Link>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </>\n            ) : (\n              <div>No autorizado</div>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </PrivateRoute>\n  );\n};\n\nexport default IndexUsuarios;\n","import React from 'react';\n\nconst Input = ({ label, name, defaultValue, type, required }) => {\n  return (\n    <label htmlFor={name} className='flex flex-col my-3'>\n      <span>{label}</span>\n      <input\n        required={required}\n        type={type}\n        name={name}\n        className='input'\n        defaultValue={defaultValue}\n      />\n    </label>\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport ReactLoading from 'react-loading';\n\nconst ButtonLoading = ({ disabled, loading, text, onClick = () => {} }) => {\n  return (\n    <button\n      data-testid='button-loading'\n      onClick={onClick}\n      disabled={disabled}\n      type='submit'\n      className='btn btn-outline-primary'\n    >\n      {loading ? <ReactLoading data-testid=\"loading-in-button\" type='spin' height={30} width={30} /> : text}\n    </button>\n  );\n};\n\nexport default ButtonLoading;\n","import { useRef, useState } from 'react';\n\nconst useFormData = (initial) => {\n  const form = useRef(initial);\n  const [formData, setFormData] = useState({});\n  const getFormData = () => {\n    const fd = new FormData(form.current);\n    const obj = {};\n    fd.forEach((value, key) => {\n      if (key.includes('nested')) {\n        const [p0, p1, p2, p3] = key.split('||');\n        if (Object.keys(obj).includes(p1)) {\n          if (Object.keys(obj[p1]).includes(p2)) {\n            obj[p1][p2][p3] = value;\n          } else {\n            obj[p1][p2] = {\n              [p3]: value,\n            };\n          }\n        } else {\n          obj[p1] = {\n            [p2]: {\n              [p3]: value,\n            },\n          };\n        }\n      } else {\n        obj[key] = value;\n      }\n    });\n    console.log(obj);\n    return obj;\n  };\n  const updateFormData = () => {\n    setFormData(getFormData());\n  };\n  return { form, formData, updateFormData };\n};\n\nexport default useFormData;\n","import { gql } from '@apollo/client';\n\nconst EDITAR_USUARIO = gql`\n  mutation EditarUsuario(\n    $_id: String!\n    $nombre: String!\n    $apellido: String!\n    $identificacion: String!\n    $correo: String!\n    $estado: Enum_EstadoUsuario!\n  ) {\n    editarUsuario(\n      _id: $_id\n      nombre: $nombre\n      apellido: $apellido\n      identificacion: $identificacion\n      correo: $correo\n      estado: $estado\n    ) {\n      _id\n      nombre\n      apellido\n      correo\n      estado\n      identificacion\n      rol\n    }\n  }\n`;\n\nexport { EDITAR_USUARIO };\n","import React, { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\n\nconst DropDown = ({ label, name, defaultValue = '', required, options }) => {\n  const [selectedValue, setSelectedValue] = useState(defaultValue);\n  const optionsSelect = [['', 'Seleccione una opción', true], ...Object.entries(options)];\n  useEffect(() => {\n    setSelectedValue(defaultValue);\n  }, [defaultValue]);\n  return (\n    <label htmlFor={name} className='flex flex-col my-3'>\n      <span>{label}</span>\n      <select\n        required={required}\n        name={name}\n        className='input'\n        value={selectedValue}\n        onChange={(e) => setSelectedValue(e.target.value)}\n      >\n        {optionsSelect.map((o) => {\n          return (\n            <option key={nanoid()} value={o[0]} disabled={o[2] ?? false}>\n              {o[1]}\n            </option>\n          );\n        })}\n      </select>\n    </label>\n  );\n};\n\nexport default DropDown;\n","import React, { useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { GET_USUARIO } from 'graphql/usuarios/queries';\nimport Input from 'components/Input';\nimport ButtonLoading from 'components/ButtonLoading';\nimport useFormData from 'hooks/useFormData';\nimport { toast } from 'react-toastify';\nimport { EDITAR_USUARIO } from 'graphql/usuarios/mutations';\nimport DropDown from 'components/Dropdown';\nimport { Enum_EstadoUsuario } from 'utils/enums';\n\nconst EditarUsuario = () => {\n  const { form, formData, updateFormData } = useFormData(null);\n  const { _id } = useParams();\n\n  const {\n    data: queryData,\n    error: queryError,\n    loading: queryLoading,\n  } = useQuery(GET_USUARIO, {\n    variables: { _id },\n  });\n\n\n  const [editarUsuario, { data: mutationData, loading: mutationLoading, error: mutationError }] =\n    useMutation(EDITAR_USUARIO);\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    delete formData.rol;\n    editarUsuario({\n      variables: { _id, ...formData },\n    });\n  };\n\n  useEffect(() => {\n    if (mutationData) {\n      toast.success('Usuario modificado correctamente');\n    }\n  }, [mutationData]);\n\n  useEffect(() => {\n    if (mutationError) {\n      toast.error('Error modificando el usuario');\n    }\n\n    if (queryError) {\n      toast.error('Error consultando el usuario');\n    }\n  }, [queryError, mutationError]);\n\n  if (queryLoading) return <div>Cargando....</div>;\n\n  return (\n    <div className='flew flex-col w-full h-full items-center justify-center p-10'>\n      <Link to='/usuarios'>\n        <i className='fas fa-arrow-left text-gray-600 cursor-pointer font-bold text-xl hover:text-gray-900' />\n      </Link>\n      <h1 className='text-2xl text-gray-800 font-bold text-center'>Editar Usuario</h1>\n      <form\n        onSubmit={submitForm}\n        onChange={updateFormData}\n        ref={form}\n        className='editarusuario'\n      >\n        <Input\n          label='Nombre:'\n          type='text'\n          name='nombre'\n          defaultValue={queryData.Usuario.nombre}\n          required={true}\n        />\n        <Input\n          label='Apellido:'\n          type='text'\n          name='apellido'\n          defaultValue={queryData.Usuario.apellido}\n          required={true}\n        />\n        <Input\n          label='Correo:'\n          type='email'\n          name='correo'\n          defaultValue={queryData.Usuario.correo}\n          required={true}\n        />\n        <Input\n          label='Identificación:'\n          type='text'\n          name='identificacion'\n          defaultValue={queryData.Usuario.identificacion}\n          required={true}\n        />\n        <DropDown\n          label='Estado:'\n          name='estado'\n          defaultValue={queryData.Usuario.estado}\n          required={true}\n          options={Enum_EstadoUsuario}\n        />\n        <span>Rol del usuario: {queryData.Usuario.rol}</span>\n        <ButtonLoading\n          disabled={Object.keys(formData).length === 0}\n          loading={mutationLoading}\n          text='Confirmar'\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default EditarUsuario;\n","import React from 'react';\nimport { Outlet } from 'react-router';\n\nconst AuthLayout = () => {\n  return (\n    <div className='flex flex-col md:flex-row flex-no-wrap h-screen'>\n      <div className='flex w-full h-full'>\n        <div className='w-full h-full  overflow-y-scroll'>\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthLayout;\n","export default __webpack_public_path__ + \"static/media/logo7.0412c84f.svg\";","import React, { useEffect } from 'react';\nimport Input from 'components/Input';\nimport { Enum_Rol } from 'utils/enums';\nimport DropDown from 'components/Dropdown';\nimport ButtonLoading from 'components/ButtonLoading';\nimport useFormData from 'hooks/useFormData';\nimport { Link } from 'react-router-dom';\nimport { REGISTRO } from 'graphql/auth/mutations';\nimport { useMutation } from '@apollo/client';\nimport { useNavigate } from 'react-router';\nimport { useAuth } from 'context/authContext';\nimport logo from '../logo7.svg'\n\nconst Register = () => {\n  const { setToken } = useAuth();\n  const navigate = useNavigate();\n  const { form, formData, updateFormData } = useFormData();\n\n  const [registro, { data: dataMutation, loading: loadingMutation, error: errorMutation }] =\n    useMutation(REGISTRO);\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    registro({ variables: formData });\n  };\n\n  useEffect(() => {\n    if (dataMutation) {\n      if (dataMutation.registro.token) {\n        setToken(dataMutation.registro.token);\n        navigate('/');\n      }\n    }\n  }, [dataMutation, setToken, navigate]);\n\n  return (\n    <div className='wrappers'>\n    \n      <h1 className='text-xl font-bold my-4'>Regístrate</h1>\n      <form className='flex flex-col' onSubmit={submitForm} onChange={updateFormData} ref={form}>\n        <div className='grid grid-cols-2 gap-2'>\n          <Input label='Nombre:' name='nombre' type='text' required />\n          <Input label='Apellido:' name='apellido' type='text' required />\n          <Input label='Documento:' name='identificacion' type='text' required />\n          <DropDown label='Rol deseado:' name='rol' required={true} options={Enum_Rol} />\n          <Input label='Correo:' name='correo' type='email' required />\n          <Input label='Contraseña:' name='password' type='password' required />\n        </div>\n        <ButtonLoading\n          disabled={Object.keys(formData).length === 0}\n          loading={false}\n          text='Registrarme'\n        />\n      </form>\n      <span>¿Ya tienes una cuenta?</span>\n      <Link to='/auth/login'>\n        <span className='text-blue-700'>Iniciar sesión</span>\n      </Link>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useEffect } from 'react';\nimport Input from 'components/Input';\nimport ButtonLoading from 'components/ButtonLoading';\nimport { Link } from 'react-router-dom';\nimport useFormData from 'hooks/useFormData';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN } from 'graphql/auth/mutations';\nimport { useAuth } from 'context/authContext';\nimport { useNavigate } from 'react-router-dom';\nimport logo from '../logo7.svg'\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const { setToken } = useAuth();\n  const { form, formData, updateFormData } = useFormData();\n\n  const [login, { data: dataMutation, loading: mutationLoading, error: mutationError }] =\n    useMutation(LOGIN);\n\n  const submitForm = (e) => {\n    e.preventDefault();\n\n    login({\n      variables: formData,\n    });\n  };\n\n  useEffect(() => {\n    if (dataMutation) {\n      if (dataMutation.login.token) {\n        setToken(dataMutation.login.token);\n        navigate('/');\n      }\n    }\n  }, [dataMutation, setToken, navigate]);\n\n  return (\n    <div className='wrapper' >\n      <img src={logo} alt=\"\"></img>\n      <h1 className='text-xl font-bold text-gray-900 '>Iniciar sesión</h1>\n      <form className='flex flex-col' onSubmit={submitForm} onChange={updateFormData} ref={form}>\n        <Input name='correo' type='email' label='Correo' required={true} />\n        <Input name='password' type='password' label='Contraseña' required={true} />\n        <ButtonLoading\n          className='btn btn-primary'\n          disabled={Object.keys(formData).length === 0}\n          loading={mutationLoading}\n          text='Iniciar Sesión'\n        />\n      </form>\n      <span>¿Deseas registrarte? </span>\n  \n\n      \n      \n      <Link to='/auth/register'>\n        <br></br>\n        <span className='text-blue-700'>Registrar</span>\n      </Link>\n    </div>\n  );\n};\n\nexport default Login;\n","import { gql } from '@apollo/client';\n\nconst PROYECTOS = gql`\n  query Proyectos {\n    Proyectos {\n      _id\n      nombre\n      estado\n      objetivos {\n        descripcion\n        tipo\n      }\n      lider {\n        _id\n        correo\n        nombre\n      }\n      inscripciones {\n        estado\n        estudiante {\n          _id\n        }\n      }\n    }\n  }\n`;\n\nexport { PROYECTOS };\n","import { gql } from '@apollo/client';\n\nconst EDITAR_PROYECTO = gql`\n  mutation Mutation($_id: String!, $campos: camposProyecto!) {\n    editarProyecto(_id: $_id, campos: $campos) {\n      _id\n      estado\n    }\n  }\n`;\n\nconst CREAR_PROYECTO = gql`\n  mutation CrearProyecto(\n    $nombre: String!\n    $presupuesto: Float!\n    $fechaInicio: Date!\n    $fechaFin: Date!\n    $lider: String!\n    $objetivos: [crearObjetivo]\n  ) {\n    crearProyecto(\n      nombre: $nombre\n      presupuesto: $presupuesto\n      fechaInicio: $fechaInicio\n      fechaFin: $fechaFin\n      lider: $lider\n      objetivos: $objetivos\n    ) {\n      _id\n    }\n  }\n`;\n\nexport { EDITAR_PROYECTO, CREAR_PROYECTO };\n","import { gql } from '@apollo/client';\n\nconst CREAR_INSCRIPCION = gql`\n  mutation Mutation($proyecto: String!, $estudiante: String!) {\n    crearInscripcion(proyecto: $proyecto, estudiante: $estudiante) {\n      _id\n    }\n  }\n`;\n\nconst APROBAR_INSCRIPCION = gql`\n  mutation AprobarInscripcion($aprobarInscripcionId: String!) {\n    aprobarInscripcion(id: $aprobarInscripcionId) {\n      _id\n    }\n  }\n`;\n\nexport { CREAR_INSCRIPCION, APROBAR_INSCRIPCION };\n","import Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport { styled } from '@mui/material/styles';\n\nconst AccordionStyled = styled((props) => <Accordion {...props} />)(({ theme }) => ({\n  backgroundColor: '#143d99',\n}));\nconst AccordionSummaryStyled = styled((props) => <AccordionSummary {...props} />)(({ theme }) => ({\n  backgroundColor: '#143d99',\n\n}));\nconst AccordionDetailsStyled = styled((props) => <AccordionDetails {...props} />)(({ theme }) => ({\n  backgroundColor: '#f9f9f9',\n\n}));\n\nexport { AccordionStyled, AccordionSummaryStyled, AccordionDetailsStyled };\n","import React, { useEffect, useState } from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { PROYECTOS } from 'graphql/proyectos/queries';\nimport DropDown from 'components/Dropdown';\nimport { Dialog } from '@mui/material';\nimport { Enum_EstadoProyecto } from 'utils/enums';\nimport ButtonLoading from 'components/ButtonLoading';\nimport { EDITAR_PROYECTO } from 'graphql/proyectos/mutations';\nimport useFormData from 'hooks/useFormData';\nimport PrivateComponent from 'components/PrivateComponent';\nimport { Link } from 'react-router-dom';\nimport { CREAR_INSCRIPCION } from 'graphql/inscripciones/mutaciones';\nimport { useUser } from 'context/userContext';\nimport { toast } from 'react-toastify';\nimport {\n  AccordionStyled,\n  AccordionSummaryStyled,\n  AccordionDetailsStyled,\n} from 'components/Accordion';\n\nconst IndexProyectos = () => {\n  const { data: queryData, loading, error } = useQuery(PROYECTOS);\n\n  useEffect(() => {\n    console.log('datos proyecto', queryData);\n  }, [queryData]);\n\n  if (loading) return <div>Cargando...</div>;\n\n  if (queryData.Proyectos) {\n    return (\n      <div className='p-10 flex flex-col'>\n        <div className='flex w-full items-center justify-center'>\n          <h1 className='text-2xl font-bold text-gray-900'>Lista de Proyectos</h1>\n        </div>\n        <PrivateComponent roleList={['ADMINISTRADOR', 'LIDER']}>\n          <div className='my-2 self-end'>\n            \n              <Link to='/proyectos/nuevo' className=\"btn\">Crear nuevo proyecto</Link>\n            \n          </div>\n        </PrivateComponent>\n        {queryData.Proyectos.map((proyecto) => {\n          return <AccordionProyecto proyecto={proyecto} />;\n        })}\n      </div>\n    );\n  }\n\n  return <></>;\n};\n\nconst AccordionProyecto = ({ proyecto }) => {\n  const [showDialog, setShowDialog] = useState(false);\n  return (\n    <>\n      <AccordionStyled >\n        <AccordionSummaryStyled expandIcon={<i className='fas fa-chevron-down' />}>\n          <div className='flex w-full justify-between'>\n            <div className='uppercase font-bold text-gray-100'>\n            <span> {proyecto.nombre} - {proyecto.estado}</span>\n             \n            </div>\n          </div>\n        </AccordionSummaryStyled>\n        <AccordionDetailsStyled>\n          <PrivateComponent roleList={['ADMINISTRADOR']}>\n          Modificar Estado\n            <i\n              className='mx-4 fas fa-pen text-blue-600 hover:text-gray-400'\n              onClick={() => {\n                setShowDialog(true);\n              }}\n            /> \n          </PrivateComponent>\n          <PrivateComponent roleList={['ESTUDIANTE']}>\n            <InscripcionProyecto\n              idProyecto={proyecto._id}\n              estado={proyecto.estado}\n              inscripciones={proyecto.inscripciones}\n            />\n          </PrivateComponent>\n          <div>Lider del proyecto: {proyecto.lider.nombre}</div>\n          <div className='flex'>\n            {proyecto.objetivos.map((objetivo) => {\n              return <Objetivo tipo={objetivo.tipo} descripcion={objetivo.descripcion} />;\n            })}\n          </div>\n        </AccordionDetailsStyled>\n      </AccordionStyled>\n      <Dialog\n        open={showDialog}\n        onClose={() => {\n          setShowDialog(false);\n        }}\n      >\n        <FormEditProyecto _id={proyecto._id} />\n      </Dialog>\n    </>\n  );\n};\n\nconst FormEditProyecto = ({ _id }) => {\n  const { form, formData, updateFormData } = useFormData();\n  const [editarProyecto, { data: dataMutation, loading, error }] = useMutation(EDITAR_PROYECTO);\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    editarProyecto({\n      variables: {\n        _id,\n        campos: formData,\n      },\n    });\n  };\n\n  useEffect(() => {\n    console.log('data mutation', dataMutation);\n  }, [dataMutation]);\n\n  return (\n    <div className='p-4'>\n      <h1 className='font-bold'>Modificar Estado del Proyecto</h1>\n      <form\n        ref={form}\n        onChange={updateFormData}\n        onSubmit={submitForm}\n        className='flex flex-col items-center'\n      >\n        <DropDown label='Estado del Proyecto' name='estado' options={Enum_EstadoProyecto} />\n        <ButtonLoading disabled={false} loading={loading} text='Confirmar' />\n      </form>\n    </div>\n  );\n};\n\nconst Objetivo = ({ tipo, descripcion }) => {\n  return (\n    <div className='mx-5 my-4 bg-gray-50 p-8 rounded-lg flex flex-col items-center justify-center shadow-xl'>\n      <div className='text-lg font-bold'>{tipo}</div>\n      <div>{descripcion}</div>\n      <PrivateComponent roleList={['ADMINISTRADOR']}>\n        <div>Editar</div>\n      </PrivateComponent>\n    </div>\n  );\n};\n\nconst InscripcionProyecto = ({ idProyecto, estado, inscripciones }) => {\n  const [estadoInscripcion, setEstadoInscripcion] = useState('');\n  const [crearInscripcion, { data, loading, error }] = useMutation(CREAR_INSCRIPCION);\n  const { userData } = useUser();\n\n  useEffect(() => {\n    if (userData && inscripciones) {\n      const flt = inscripciones.filter((el) => el.estudiante._id === userData._id);\n      if (flt.length > 0) {\n        setEstadoInscripcion(flt[0].estado);\n      }\n    }\n  }, [userData, inscripciones]);\n\n  useEffect(() => {\n    if (data) {\n      console.log(data);\n      toast.success('inscripcion creada con exito');\n    }\n  }, [data]);\n\n  const confirmarInscripcion = () => {\n    crearInscripcion({ variables: { proyecto: idProyecto, estudiante: userData._id } });\n  };\n\n  return (\n    <>\n      {estadoInscripcion !== '' ? (\n        <span>Ya estas inscrito en este proyecto y el estado es {estadoInscripcion}</span>\n      ) : (\n        <ButtonLoading\n          onClick={() => confirmarInscripcion()}\n          disabled={estado === 'INACTIVO'}\n          loading={loading}\n          text='Inscribirme en este proyecto'\n        />\n      )}\n    </>\n  );\n};\n\nexport default IndexProyectos;\n","import { createContext, useContext } from 'react';\n\nexport const ObjContext = createContext(null);\n\nexport const useObj = () => {\n  return useContext(ObjContext);\n};\n","import React, { useEffect, useState } from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\nimport Input from 'components/Input';\nimport { GET_USUARIOS } from 'graphql/usuarios/queries';\nimport { Link } from 'react-router-dom';\nimport DropDown from 'components/Dropdown';\nimport ButtonLoading from 'components/ButtonLoading';\nimport useFormData from 'hooks/useFormData';\nimport { Enum_TipoObjetivo } from 'utils/enums';\nimport { nanoid } from 'nanoid';\nimport { ObjContext } from 'context/objContext';\nimport { useObj } from 'context/objContext';\nimport { CREAR_PROYECTO } from 'graphql/proyectos/mutations';\n\nconst NuevoProyecto = () => {\n  const { form, formData, updateFormData } = useFormData();\n  const [listaUsuarios, setListaUsuarios] = useState({});\n  const { data: data, loading, error } = useQuery(GET_USUARIOS, {\n    variables: {\n      filtro: { rol: 'LIDER', estado: 'AUTORIZADO' },\n    },\n  });\n\n  const [crearProyecto, { data: mutationData, loading: mutationLoading, error: mutationError }] =\n    useMutation(CREAR_PROYECTO);\n\n  useEffect(() => {\n    console.log(data);\n    if (data) {\n      const lu = {};\n      data.Usuarios.forEach((elemento) => {\n        lu[elemento._id] = elemento.correo;\n      });\n\n      setListaUsuarios(lu);\n      console.log(lu);\n    }\n    \n  }, [data]);\n\n  useEffect(() => {\n    console.log('data mutation', mutationData);\n  });\n\n  const submitForm = (e) => {\n    e.preventDefault();\n\n    formData.objetivos = Object.values(formData.objetivos);\n    formData.presupuesto = parseFloat(formData.presupuesto);\n\n    crearProyecto({\n      variables: formData,\n    });\n  };\n\n  if (loading) return <div>...Cargando</div>;\n\n  return (\n    <div className='editarusuario'>\n      <div className='self-start'>\n        <Link to='/proyectos'>\n          <i className='fas fa-arrow-left' />\n        </Link>\n      </div>\n      <h1 className='text-2xl font-bold text-gray-900'>Crear Nuevo Proyecto</h1>\n        <form ref={form} onChange={updateFormData} onSubmit={submitForm}>\n        <Input name='nombre' label='Nombre del Proyecto' required={true} type='text' />\n        <Input name='presupuesto' label='Presupuesto' required={true} type='number' />\n        <Input name='fechaInicio' label='Fecha de Inicio' required={true} type='date' />\n        <Input name='fechaFin' label='Fecha de Fin' required={true} type='date' />\n        <DropDown label='Líder' options={listaUsuarios} name='lider' required={true} />\n        <Objetivos />\n        <br />\n        <ButtonLoading text='Crear Proyecto' loading={false} disabled={false} />\n      </form>\n      </div>\n  );\n};\n\nconst Objetivos = () => {\n  const [listaObjetivos, setListaObjetivos] = useState([]);\n  const [maxObjetivos, setMaxObjetivos] = useState(false);\n\n  const eliminarObjetivo = (id) => {\n    setListaObjetivos(listaObjetivos.filter((el) => el.props.id !== id));\n  };\n\n  const componenteObjetivoAgregado = () => {\n    const id = nanoid();\n    return <FormObjetivo key={id} id={id} />;\n  };\n\n  useEffect(() => {\n    if (listaObjetivos.length > 4) {\n      setMaxObjetivos(true);\n    } else {\n      setMaxObjetivos(false);\n    }\n  }, [listaObjetivos]);\n\n  return (\n    <ObjContext.Provider value={{ eliminarObjetivo }}>\n      <div>\n        <span>Objetivos del Proyecto</span>\n        {!maxObjetivos && (\n          <i\n            onClick={() => setListaObjetivos([...listaObjetivos, componenteObjetivoAgregado()])}\n            className='fas fa-plus rounded-full bg-green-500 hover:bg-green-400 text-white p-2 mx-2 cursor-pointer'\n          />\n        )}\n        {listaObjetivos.map((objetivo) => {\n          return objetivo;\n        })}\n      </div>\n    </ObjContext.Provider>\n  );\n};\n\nconst FormObjetivo = ({ id }) => {\n  const { eliminarObjetivo } = useObj();\n  return (\n    <div className='flex items-center'>\n      <Input\n        name={`nested||objetivos||${id}||descripcion`}\n        label='Descripción'\n        type='textarea'\n        required={true}\n      />\n      <DropDown\n        name={`nested||objetivos||${id}||tipo`}\n        options={Enum_TipoObjetivo}\n        label='Tipo de Objetivo'\n        required={true}\n      />\n      <i\n        onClick={() => eliminarObjetivo(id)}\n        className='fas fa-minus rounded-full bg-red-500 hover:bg-red-400 text-white p-2 mx-2 cursor-pointer mt-6'\n      />\n    </div>\n  );\n};\n\nexport default NuevoProyecto;\n","import { gql } from '@apollo/client';\n\nconst GET_INSCRIPCIONES = gql`\n  query Inscripciones {\n    Inscripciones {\n      _id\n      estado\n      estudiante {\n        _id\n      }\n    }\n  }\n`;\n\nexport { GET_INSCRIPCIONES };\n","import React, { useEffect } from 'react';\nimport { useMutation, useQuery } from '@apollo/client';\nimport PrivateRoute from 'components/PrivateRoute';\nimport { GET_INSCRIPCIONES } from 'graphql/inscripciones/queries';\nimport { APROBAR_INSCRIPCION } from 'graphql/inscripciones/mutaciones';\nimport ButtonLoading from 'components/ButtonLoading';\nimport { toast } from 'react-toastify';\nimport {\n  AccordionStyled,\n  AccordionSummaryStyled,\n  AccordionDetailsStyled,\n} from 'components/Accordion';\n\nconst IndexInscripciones = () => {\n  const { data, loading, error, refetch } = useQuery(GET_INSCRIPCIONES);\n\n  useEffect(() => {\n    console.log(data);\n  }, [data]);\n  if (loading) return <div>Loading...</div>;\n  return (\n    <PrivateRoute roleList={['ADMINISTRADOR', 'LIDER']}>\n      <div className='p-10'>\n        <div>Pagina de inscripciones</div>\n        <div className='my-4'>\n          <AccordionInscripcion\n            titulo='Inscripciones aprobadas'\n            data={data.Inscripciones.filter((el) => el.estado === 'ACEPTADO')}\n          />\n          <AccordionInscripcion\n            titulo='Inscripciones pendientes'\n            data={data.Inscripciones.filter((el) => el.estado === 'PENDIENTE')}\n            refetch={refetch}\n          />\n          <AccordionInscripcion\n            titulo='Inscripciones rechazadas'\n            data={data.Inscripciones.filter((el) => el.estado === 'RECHAZADO')}\n          />\n        </div>\n      </div>\n    </PrivateRoute>\n  );\n};\n\nconst AccordionInscripcion = ({ data, titulo, refetch = () => {} }) => {\n  return (\n    <AccordionStyled>\n      <AccordionSummaryStyled>\n        {titulo} ({data.length})\n      </AccordionSummaryStyled>\n      <AccordionDetailsStyled>\n        <div className='flex'>\n          {data &&\n            data.map((inscripcion) => {\n              return <Inscripcion inscripcion={inscripcion} refetch={refetch} />;\n            })}\n        </div>\n      </AccordionDetailsStyled>\n    </AccordionStyled>\n  );\n};\n\nconst Inscripcion = ({ inscripcion, refetch }) => {\n  const [aprobarInscripcion, { data, loading, error }] = useMutation(APROBAR_INSCRIPCION);\n\n  useEffect(() => {\n    if (data) {\n      toast.success('Inscripcion aprobada con exito');\n      refetch();\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (error) {\n      toast.error('Error aprobando la inscripcion');\n    }\n  }, [error]);\n\n  const cambiarEstadoInscripcion = () => {\n    aprobarInscripcion({\n      variables: {\n        aprobarInscripcionId: inscripcion._id,\n      },\n    });\n  };\n\n  return (\n    <div className='bg-gray-900 text-gray-50 flex flex-col p-6 m-2 rounded-lg shadow-xl'>\n      {/* <span>{inscripcion.proyecto._id}</span> */}\n      <span>{inscripcion.estudiante._id}</span>\n      <span>{inscripcion.estado}</span>\n      {inscripcion.estado === 'PENDIENTE' && (\n        <ButtonLoading\n          onClick={() => {\n            cambiarEstadoInscripcion();\n          }}\n          text='Aprobar Inscripcion'\n          loading={loading}\n          disabled={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default IndexInscripciones;\n","import React, { useState, useEffect } from 'react';\nimport PrivateLayout from 'layouts/PrivateLayout';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { UserContext } from 'context/userContext';\nimport { ApolloProvider, ApolloClient, createHttpLink, InMemoryCache } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport Index from 'pages/Index';\nimport Page2 from 'pages/Page2';\nimport IndexCategory1 from 'pages/category1/Index';\nimport Category1 from 'pages/category1/CategoryPage1';\nimport IndexUsuarios from 'pages/usuarios';\nimport EditarUsuario from 'pages/usuarios/editar';\nimport AuthLayout from 'layouts/AuthLayout';\nimport Register from 'pages/auth/register';\nimport Login from 'pages/auth/login';\nimport { AuthContext } from 'context/authContext';\nimport IndexProyectos from 'pages/proyectos/Index';\nimport jwt_decode from 'jwt-decode';\nimport 'styles/globals.css';\nimport 'styles/tabla.css';\nimport NuevoProyecto from 'pages/proyectos/NuevoProyecto';\nimport IndexInscripciones from 'pages/inscripciones';\n\n// import PrivateRoute from 'components/PrivateRoute';\n\nconst httpLink = createHttpLink({\n  uri: 'http://pablobk.ydns.eu:4000/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = JSON.parse(localStorage.getItem('token'));\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(httpLink),\n});\n\nfunction App() {\n  const [userData, setUserData] = useState({});\n  const [authToken, setAuthToken] = useState('');\n\n  const setToken = (token) => {\n    console.log('set token', token);\n    setAuthToken(token);\n    if (token) {\n      localStorage.setItem('token', JSON.stringify(token));\n    } else {\n      localStorage.removeItem('token');\n    }\n  };\n\n  useEffect(() => {\n    if (authToken) {\n      const decoded = jwt_decode(authToken);\n      setUserData({\n        _id: decoded._id,\n        nombre: decoded.nombre,\n        apellido: decoded.apellido,\n        identificacion: decoded.identificacion,\n        correo: decoded.correo,\n        rol: decoded.rol,\n      });\n    }\n  }, [authToken]);\n\n  return (\n    <ApolloProvider client={client}>\n      <AuthContext.Provider value={{ authToken, setAuthToken, setToken }}>\n        <UserContext.Provider value={{ userData, setUserData }}>\n          <BrowserRouter>\n            <Routes>\n              <Route path='/' element={<PrivateLayout />}>\n                <Route path='' element={<Index />} />\n                <Route path='/usuarios' element={<IndexUsuarios />} />\n                <Route path='/usuarios/editar/:_id' element={<EditarUsuario />} />\n                <Route path='/proyectos' element={<IndexProyectos />} />\n                <Route path='/proyectos/nuevo' element={<NuevoProyecto />} />\n                <Route path='/inscripciones' element={<IndexInscripciones />} />\n                <Route path='page2' element={<Page2 />} />\n                <Route path='category1' element={<IndexCategory1 />} />\n                <Route path='category1/page1' element={<Category1 />} />\n              </Route>\n              <Route path='/auth' element={<AuthLayout />}>\n                <Route path='register' element={<Register />} />\n                <Route path='login' element={<Login />} />\n              </Route>\n            </Routes>\n          </BrowserRouter>\n        </UserContext.Provider>\n      </AuthContext.Provider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}